local json = require("json")
local IPlayFabHttps = require("IPlayFabHttps")
local PlayFabSettings = require("PlayFabSettings")

local PlayFabClientApi = {
    settings = PlayFabSettings.settings
}

function IsClientLoggedIn()
    return (not (PlayFabSettings.internalSettings.sessionTicket == nil))
end

-- Gets a Photon custom authentication token that can be used to securely join the player into a Photon room. See https://api.playfab.com/docs/using-photon-with-playfab/ for more details.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPhotonAuthenticationToken
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPhotonAuthenticationTokenRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPhotonAuthenticationTokenResult
function GetPhotonAuthenticationToken(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPhotonAuthenticationToken", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPhotonAuthenticationToken = GetPhotonAuthenticationToken

-- Signs the user in using the Android device identifier, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithAndroidDeviceID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithAndroidDeviceIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithAndroidDeviceID(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithAndroidDeviceID", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithAndroidDeviceID = LoginWithAndroidDeviceID

-- Signs the user in using a custom unique identifier generated by the title, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithCustomID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithCustomIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithCustomID(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithCustomID", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithCustomID = LoginWithCustomID

-- Signs the user into the PlayFab account, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithEmailAddress
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithEmailAddressRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithEmailAddress(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithEmailAddress", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithEmailAddress = LoginWithEmailAddress

-- Signs the user in using a Facebook access token, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithFacebook
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithFacebookRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithFacebook(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithFacebook", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithFacebook = LoginWithFacebook

-- Signs the user in using an iOS Game Center player identifier, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithGameCenter
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithGameCenterRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithGameCenter(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithGameCenter", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithGameCenter = LoginWithGameCenter

-- Signs the user in using a Google account access token(https://developers.google.com/android/reference/com/google/android/gms/auth/GoogleAuthUtil#public-methods), returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithGoogleAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithGoogleAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithGoogleAccount(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithGoogleAccount", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithGoogleAccount = LoginWithGoogleAccount

-- Signs the user in using the vendor-specific iOS device identifier, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithIOSDeviceID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithIOSDeviceIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithIOSDeviceID(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithIOSDeviceID", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithIOSDeviceID = LoginWithIOSDeviceID

-- Signs the user in using a Kongregate player account.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithKongregate
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithKongregateRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithKongregate(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithKongregate", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithKongregate = LoginWithKongregate

-- Signs the user into the PlayFab account, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithPlayFab
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithPlayFabRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithPlayFab(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithPlayFab", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithPlayFab = LoginWithPlayFab

-- Signs the user in using a Steam authentication ticket, returning a session identifier that can subsequently be used for API calls which require an authenticated user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithSteam
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithSteamRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithSteam(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithSteam", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithSteam = LoginWithSteam

-- Signs the user in using a Twitch access token.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LoginWithTwitch
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginWithTwitchRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LoginResult
function LoginWithTwitch(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/LoginWithTwitch", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.LoginWithTwitch = LoginWithTwitch

-- Registers a new Playfab user account, returning a session identifier that can subsequently be used for API calls which require an authenticated user. You must supply either a username or an email address.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RegisterPlayFabUser
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RegisterPlayFabUserRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RegisterPlayFabUserResult
function RegisterPlayFabUser(request, onSuccess, onError)
    request.TitleId = PlayFabSettings.settings.titleId
    local externalOnSuccess = onSuccess
    function wrappedOnSuccess(response)
        PlayFabSettings.internalSettings.sessionTicket = response.SessionTicket
        if (not(onSuccess == nil)) then
            externalOnSuccess(response)
        end
    end
    onSuccess = wrappedOnSuccess
    IPlayFabHttps.MakePlayFabApiCall("/Client/RegisterPlayFabUser", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.RegisterPlayFabUser = RegisterPlayFabUser

-- Adds the specified generic service identifier to the player's PlayFab account. This is designed to allow for a PlayFab ID lookup of any arbitrary service identifier a title wants to add. This identifier should never be used as authentication credentials, as the intent is that it is easily accessible by other players.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AddGenericID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddGenericIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddGenericIDResult
function AddGenericID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AddGenericID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AddGenericID = AddGenericID

-- Adds playfab username/password auth to an existing account created via an anonymous auth method, e.g. automatic device ID login.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AddUsernamePassword
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddUsernamePasswordRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddUsernamePasswordResult
function AddUsernamePassword(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AddUsernamePassword", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AddUsernamePassword = AddUsernamePassword

-- Retrieves the user's PlayFab account details
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetAccountInfo
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetAccountInfoRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetAccountInfoResult
function GetAccountInfo(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetAccountInfo", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetAccountInfo = GetAccountInfo

-- Retrieves all of the user's different kinds of info.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayerCombinedInfo
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerCombinedInfoRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerCombinedInfoResult
function GetPlayerCombinedInfo(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayerCombinedInfo", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayerCombinedInfo = GetPlayerCombinedInfo

-- Retrieves the unique PlayFab identifiers for the given set of Facebook identifiers.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayFabIDsFromFacebookIDs
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromFacebookIDsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromFacebookIDsResult
function GetPlayFabIDsFromFacebookIDs(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayFabIDsFromFacebookIDs", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayFabIDsFromFacebookIDs = GetPlayFabIDsFromFacebookIDs

-- Retrieves the unique PlayFab identifiers for the given set of Game Center identifiers (referenced in the Game Center Programming Guide as the Player Identifier).
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayFabIDsFromGameCenterIDs
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromGameCenterIDsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromGameCenterIDsResult
function GetPlayFabIDsFromGameCenterIDs(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayFabIDsFromGameCenterIDs", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayFabIDsFromGameCenterIDs = GetPlayFabIDsFromGameCenterIDs

-- Retrieves the unique PlayFab identifiers for the given set of generic service identifiers. A generic identifier is the service name plus the service-specific ID for the player, as specified by the title when the generic identifier was added to the player account.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayFabIDsFromGenericIDs
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromGenericIDsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromGenericIDsResult
function GetPlayFabIDsFromGenericIDs(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayFabIDsFromGenericIDs", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayFabIDsFromGenericIDs = GetPlayFabIDsFromGenericIDs

-- Retrieves the unique PlayFab identifiers for the given set of Google identifiers. The Google identifiers are the IDs for the user accounts, available as "id" in the Google+ People API calls.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayFabIDsFromGoogleIDs
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromGoogleIDsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromGoogleIDsResult
function GetPlayFabIDsFromGoogleIDs(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayFabIDsFromGoogleIDs", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayFabIDsFromGoogleIDs = GetPlayFabIDsFromGoogleIDs

-- Retrieves the unique PlayFab identifiers for the given set of Kongregate identifiers. The Kongregate identifiers are the IDs for the user accounts, available as "user_id" from the Kongregate API methods(ex: http://developers.kongregate.com/docs/client/getUserId).
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayFabIDsFromKongregateIDs
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromKongregateIDsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromKongregateIDsResult
function GetPlayFabIDsFromKongregateIDs(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayFabIDsFromKongregateIDs", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayFabIDsFromKongregateIDs = GetPlayFabIDsFromKongregateIDs

-- Retrieves the unique PlayFab identifiers for the given set of Steam identifiers. The Steam identifiers  are the profile IDs for the user accounts, available as SteamId in the Steamworks Community API calls.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayFabIDsFromSteamIDs
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromSteamIDsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromSteamIDsResult
function GetPlayFabIDsFromSteamIDs(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayFabIDsFromSteamIDs", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayFabIDsFromSteamIDs = GetPlayFabIDsFromSteamIDs

-- Retrieves the unique PlayFab identifiers for the given set of Twitch identifiers. The Twitch identifiers are the IDs for the user accounts, available as "_id" from the Twitch API methods (ex: https://github.com/justintv/Twitch-API/blob/master/v3_resources/users.md#get-usersuser).
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayFabIDsFromTwitchIDs
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromTwitchIDsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayFabIDsFromTwitchIDsResult
function GetPlayFabIDsFromTwitchIDs(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayFabIDsFromTwitchIDs", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayFabIDsFromTwitchIDs = GetPlayFabIDsFromTwitchIDs

-- NOTE: This call will be deprecated soon. For fetching the data for a given user  use GetPlayerCombinedInfo. For looking up users from the client api, we are in the process of adding a new api call. Once that call is ready, this one will be deprecated.  Retrieves all requested data for a user in one unified request. By default, this API returns all  data for the locally signed-in user. The input parameters may be used to limit the data retrieved to any subset of the available data, as well as retrieve the available data for a different user. Note that certain data, including inventory, virtual currency balances, and personally identifying information, may only be retrieved for the locally signed-in user. In the example below, a request is made for the account details, virtual currency balances, and specified user data for the locally signed-in user.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetUserCombinedInfo
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserCombinedInfoRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserCombinedInfoResult
function GetUserCombinedInfo(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetUserCombinedInfo", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetUserCombinedInfo = GetUserCombinedInfo

-- Links the Android device identifier to the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkAndroidDeviceID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkAndroidDeviceIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkAndroidDeviceIDResult
function LinkAndroidDeviceID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkAndroidDeviceID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkAndroidDeviceID = LinkAndroidDeviceID

-- Links the custom identifier, generated by the title, to the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkCustomID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkCustomIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkCustomIDResult
function LinkCustomID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkCustomID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkCustomID = LinkCustomID

-- Links the Facebook account associated with the provided Facebook access token to the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkFacebookAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkFacebookAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkFacebookAccountResult
function LinkFacebookAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkFacebookAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkFacebookAccount = LinkFacebookAccount

-- Links the Game Center account associated with the provided Game Center ID to the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkGameCenterAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkGameCenterAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkGameCenterAccountResult
function LinkGameCenterAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkGameCenterAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkGameCenterAccount = LinkGameCenterAccount

-- Links the currently signed-in user account to the Google account specified by the Google account access token (https://developers.google.com/android/reference/com/google/android/gms/auth/GoogleAuthUtil#public-methods).
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkGoogleAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkGoogleAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkGoogleAccountResult
function LinkGoogleAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkGoogleAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkGoogleAccount = LinkGoogleAccount

-- Links the vendor-specific iOS device identifier to the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkIOSDeviceID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkIOSDeviceIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkIOSDeviceIDResult
function LinkIOSDeviceID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkIOSDeviceID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkIOSDeviceID = LinkIOSDeviceID

-- Links the Kongregate identifier to the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkKongregate
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkKongregateAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkKongregateAccountResult
function LinkKongregate(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkKongregate", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkKongregate = LinkKongregate

-- Links the Steam account associated with the provided Steam authentication ticket to the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkSteamAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkSteamAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkSteamAccountResult
function LinkSteamAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkSteamAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkSteamAccount = LinkSteamAccount

-- Links the Twitch account associated with the token to the user's PlayFab account.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LinkTwitch
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkTwitchAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LinkTwitchAccountResult
function LinkTwitch(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LinkTwitch", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LinkTwitch = LinkTwitch

-- Removes the specified generic service identifier from the player's PlayFab account.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RemoveGenericID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RemoveGenericIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RemoveGenericIDResult
function RemoveGenericID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/RemoveGenericID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.RemoveGenericID = RemoveGenericID

-- Submit a report for another player (due to bad bahavior, etc.), so that customer service representatives for the title can take action concerning potentially toxic players.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/ReportPlayer
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ReportPlayerClientRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ReportPlayerClientResult
function ReportPlayer(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/ReportPlayer", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.ReportPlayer = ReportPlayer

-- Forces an email to be sent to the registered email address for the user's account, with a link allowing the user to change the password
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/SendAccountRecoveryEmail
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.SendAccountRecoveryEmailRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.SendAccountRecoveryEmailResult
function SendAccountRecoveryEmail(request, onSuccess, onError)
    IPlayFabHttps.MakePlayFabApiCall("/Client/SendAccountRecoveryEmail", request, nil, nil, onSuccess, onError)
end
PlayFabClientApi.SendAccountRecoveryEmail = SendAccountRecoveryEmail

-- Unlinks the related Android device identifier from the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkAndroidDeviceID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkAndroidDeviceIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkAndroidDeviceIDResult
function UnlinkAndroidDeviceID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkAndroidDeviceID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkAndroidDeviceID = UnlinkAndroidDeviceID

-- Unlinks the related custom identifier from the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkCustomID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkCustomIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkCustomIDResult
function UnlinkCustomID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkCustomID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkCustomID = UnlinkCustomID

-- Unlinks the related Facebook account from the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkFacebookAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkFacebookAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkFacebookAccountResult
function UnlinkFacebookAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkFacebookAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkFacebookAccount = UnlinkFacebookAccount

-- Unlinks the related Game Center account from the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkGameCenterAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkGameCenterAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkGameCenterAccountResult
function UnlinkGameCenterAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkGameCenterAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkGameCenterAccount = UnlinkGameCenterAccount

-- Unlinks the related Google account from the user's PlayFab account (https://developers.google.com/android/reference/com/google/android/gms/auth/GoogleAuthUtil#public-methods).
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkGoogleAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkGoogleAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkGoogleAccountResult
function UnlinkGoogleAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkGoogleAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkGoogleAccount = UnlinkGoogleAccount

-- Unlinks the related iOS device identifier from the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkIOSDeviceID
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkIOSDeviceIDRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkIOSDeviceIDResult
function UnlinkIOSDeviceID(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkIOSDeviceID", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkIOSDeviceID = UnlinkIOSDeviceID

-- Unlinks the related Kongregate identifier from the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkKongregate
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkKongregateAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkKongregateAccountResult
function UnlinkKongregate(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkKongregate", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkKongregate = UnlinkKongregate

-- Unlinks the related Steam account from the user's PlayFab account
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkSteamAccount
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkSteamAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkSteamAccountResult
function UnlinkSteamAccount(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkSteamAccount", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkSteamAccount = UnlinkSteamAccount

-- Unlinks the related Twitch account from the user's PlayFab account.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlinkTwitch
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkTwitchAccountRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlinkTwitchAccountResult
function UnlinkTwitch(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlinkTwitch", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlinkTwitch = UnlinkTwitch

-- Updates the title specific display name for the user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdateUserTitleDisplayName
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserTitleDisplayNameRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserTitleDisplayNameResult
function UpdateUserTitleDisplayName(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdateUserTitleDisplayName", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdateUserTitleDisplayName = UpdateUserTitleDisplayName

-- Retrieves a list of ranked friends of the current player for the given statistic, starting from the indicated point in the leaderboard
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetFriendLeaderboard
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetFriendLeaderboardRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardResult
function GetFriendLeaderboard(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetFriendLeaderboard", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetFriendLeaderboard = GetFriendLeaderboard

-- Retrieves a list of ranked friends of the current player for the given statistic, centered on the currently signed-in user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetFriendLeaderboardAroundCurrentUser
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetFriendLeaderboardAroundCurrentUserRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetFriendLeaderboardAroundCurrentUserResult
function GetFriendLeaderboardAroundCurrentUser(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetFriendLeaderboardAroundCurrentUser", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetFriendLeaderboardAroundCurrentUser = GetFriendLeaderboardAroundCurrentUser

-- Retrieves a list of ranked friends of the current player for the given statistic, centered on the requested PlayFab user. If PlayFabId is empty or null will return currently logged in user.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetFriendLeaderboardAroundPlayer
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetFriendLeaderboardAroundPlayerRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetFriendLeaderboardAroundPlayerResult
function GetFriendLeaderboardAroundPlayer(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetFriendLeaderboardAroundPlayer", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetFriendLeaderboardAroundPlayer = GetFriendLeaderboardAroundPlayer

-- Retrieves a list of ranked users for the given statistic, starting from the indicated point in the leaderboard
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetLeaderboard
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardResult
function GetLeaderboard(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetLeaderboard", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetLeaderboard = GetLeaderboard

-- Retrieves a list of ranked users for the given statistic, centered on the currently signed-in user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetLeaderboardAroundCurrentUser
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardAroundCurrentUserRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardAroundCurrentUserResult
function GetLeaderboardAroundCurrentUser(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetLeaderboardAroundCurrentUser", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetLeaderboardAroundCurrentUser = GetLeaderboardAroundCurrentUser

-- Retrieves a list of ranked users for the given statistic, centered on the requested player. If PlayFabId is empty or null will return currently logged in user.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetLeaderboardAroundPlayer
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardAroundPlayerRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardAroundPlayerResult
function GetLeaderboardAroundPlayer(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetLeaderboardAroundPlayer", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetLeaderboardAroundPlayer = GetLeaderboardAroundPlayer

-- Retrieves the indicated statistics (current version and values for all statistics, if none are specified), for the local player.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayerStatistics
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerStatisticsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerStatisticsResult
function GetPlayerStatistics(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayerStatistics", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayerStatistics = GetPlayerStatistics

-- Retrieves the information on the available versions of the specified statistic.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayerStatisticVersions
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerStatisticVersionsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerStatisticVersionsResult
function GetPlayerStatisticVersions(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayerStatisticVersions", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayerStatisticVersions = GetPlayerStatisticVersions

-- Retrieves the title-specific custom data for the user which is readable and writable by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetUserData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataResult
function GetUserData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetUserData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetUserData = GetUserData

-- Retrieves the publisher-specific custom data for the user which is readable and writable by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetUserPublisherData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataResult
function GetUserPublisherData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetUserPublisherData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetUserPublisherData = GetUserPublisherData

-- Retrieves the publisher-specific custom data for the user which can only be read by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetUserPublisherReadOnlyData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataResult
function GetUserPublisherReadOnlyData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetUserPublisherReadOnlyData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetUserPublisherReadOnlyData = GetUserPublisherReadOnlyData

-- Retrieves the title-specific custom data for the user which can only be read by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetUserReadOnlyData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserDataResult
function GetUserReadOnlyData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetUserReadOnlyData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetUserReadOnlyData = GetUserReadOnlyData

-- Retrieves the details of all title-specific statistics for the user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetUserStatistics
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserStatisticsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserStatisticsResult
function GetUserStatistics(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetUserStatistics", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetUserStatistics = GetUserStatistics

-- Updates the values of the specified title-specific statistics for the user. By default, clients are not permitted to update statistics. Developers may override this setting in the Game Manager > Settings > API Features.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdatePlayerStatistics
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdatePlayerStatisticsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdatePlayerStatisticsResult
function UpdatePlayerStatistics(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdatePlayerStatistics", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdatePlayerStatistics = UpdatePlayerStatistics

-- Creates and updates the title-specific custom data for the user which is readable and writable by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdateUserData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserDataResult
function UpdateUserData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdateUserData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdateUserData = UpdateUserData

-- Creates and updates the publisher-specific custom data for the user which is readable and writable by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdateUserPublisherData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserDataResult
function UpdateUserPublisherData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdateUserPublisherData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdateUserPublisherData = UpdateUserPublisherData

-- Updates the values of the specified title-specific statistics for the user. By default, clients are not permitted to update statistics. Developers may override this setting in the Game Manager > Settings > API Features.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdateUserStatistics
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserStatisticsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateUserStatisticsResult
function UpdateUserStatistics(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdateUserStatistics", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdateUserStatistics = UpdateUserStatistics

-- Retrieves the specified version of the title's catalog of virtual goods, including all defined properties
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCatalogItems
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCatalogItemsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCatalogItemsResult
function GetCatalogItems(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCatalogItems", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCatalogItems = GetCatalogItems

-- Retrieves the key-value store of custom publisher settings
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPublisherData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPublisherDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPublisherDataResult
function GetPublisherData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPublisherData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPublisherData = GetPublisherData

-- Retrieves the set of items defined for the specified store, including all prices defined
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetStoreItems
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetStoreItemsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetStoreItemsResult
function GetStoreItems(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetStoreItems", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetStoreItems = GetStoreItems

-- Retrieves the key-value store of custom title settings
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetTitleData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetTitleDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetTitleDataResult
function GetTitleData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetTitleData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetTitleData = GetTitleData

-- Retrieves the title news feed, as configured in the developer portal
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetTitleNews
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetTitleNewsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetTitleNewsResult
function GetTitleNews(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetTitleNews", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetTitleNews = GetTitleNews

-- Increments the user's balance of the specified virtual currency by the stated amount
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AddUserVirtualCurrency
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddUserVirtualCurrencyRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ModifyUserVirtualCurrencyResult
function AddUserVirtualCurrency(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AddUserVirtualCurrency", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AddUserVirtualCurrency = AddUserVirtualCurrency

-- Confirms with the payment provider that the purchase was approved (if applicable) and adjusts inventory and virtual currency balances as appropriate
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/ConfirmPurchase
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ConfirmPurchaseRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ConfirmPurchaseResult
function ConfirmPurchase(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/ConfirmPurchase", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.ConfirmPurchase = ConfirmPurchase

-- Consume uses of a consumable item. When all uses are consumed, it will be removed from the player's inventory.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/ConsumeItem
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ConsumeItemRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ConsumeItemResult
function ConsumeItem(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/ConsumeItem", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.ConsumeItem = ConsumeItem

-- Retrieves the specified character's current inventory of virtual goods
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCharacterInventory
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterInventoryRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterInventoryResult
function GetCharacterInventory(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCharacterInventory", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCharacterInventory = GetCharacterInventory

-- Retrieves a completed purchase along with its current PlayFab status.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPurchase
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPurchaseRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPurchaseResult
function GetPurchase(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPurchase", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPurchase = GetPurchase

-- Retrieves the user's current inventory of virtual goods
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetUserInventory
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserInventoryRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetUserInventoryResult
function GetUserInventory(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetUserInventory", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetUserInventory = GetUserInventory

-- Selects a payment option for purchase order created via StartPurchase
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/PayForPurchase
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.PayForPurchaseRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.PayForPurchaseResult
function PayForPurchase(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/PayForPurchase", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.PayForPurchase = PayForPurchase

-- Buys a single item with virtual currency. You must specify both the virtual currency to use to purchase, as well as what the client believes the price to be. This lets the server fail the purchase if the price has changed.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/PurchaseItem
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.PurchaseItemRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.PurchaseItemResult
function PurchaseItem(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/PurchaseItem", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.PurchaseItem = PurchaseItem

-- Adds the virtual goods associated with the coupon to the user's inventory. Coupons can be generated  via the Economy->Catalogs tab in the PlayFab Game Manager.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RedeemCoupon
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RedeemCouponRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RedeemCouponResult
function RedeemCoupon(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/RedeemCoupon", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.RedeemCoupon = RedeemCoupon

-- Creates an order for a list of items from the title catalog
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/StartPurchase
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.StartPurchaseRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.StartPurchaseResult
function StartPurchase(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/StartPurchase", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.StartPurchase = StartPurchase

-- Decrements the user's balance of the specified virtual currency by the stated amount
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/SubtractUserVirtualCurrency
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.SubtractUserVirtualCurrencyRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ModifyUserVirtualCurrencyResult
function SubtractUserVirtualCurrency(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/SubtractUserVirtualCurrency", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.SubtractUserVirtualCurrency = SubtractUserVirtualCurrency

-- Opens the specified container, with the specified key (when required), and returns the contents of the opened container. If the container (and key when relevant) are consumable (RemainingUses > 0), their RemainingUses will be decremented, consistent with the operation of ConsumeItem.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlockContainerInstance
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlockContainerInstanceRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlockContainerItemResult
function UnlockContainerInstance(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlockContainerInstance", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlockContainerInstance = UnlockContainerInstance

-- Searches target inventory for an ItemInstance matching the given CatalogItemId, if necessary unlocks it using an appropriate key, and returns the contents of the opened container. If the container (and key when relevant) are consumable (RemainingUses > 0), their RemainingUses will be decremented, consistent with the operation of ConsumeItem.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UnlockContainerItem
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlockContainerItemRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UnlockContainerItemResult
function UnlockContainerItem(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UnlockContainerItem", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UnlockContainerItem = UnlockContainerItem

-- Adds the PlayFab user, based upon a match against a supplied unique identifier, to the friend list of the local user. At least one of FriendPlayFabId,FriendUsername,FriendEmail, or FriendTitleDisplayName should be initialized.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AddFriend
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddFriendRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddFriendResult
function AddFriend(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AddFriend", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AddFriend = AddFriend

-- Retrieves the current friend list for the local user, constrained to users who have PlayFab accounts. Friends from linked accounts (Facebook, Steam) are also included. You may optionally exclude some linked services' friends.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetFriendsList
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetFriendsListRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetFriendsListResult
function GetFriendsList(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetFriendsList", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetFriendsList = GetFriendsList

-- Removes a specified user from the friend list of the local user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RemoveFriend
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RemoveFriendRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RemoveFriendResult
function RemoveFriend(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/RemoveFriend", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.RemoveFriend = RemoveFriend

-- Updates the tag list for a specified user in the friend list of the local user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/SetFriendTags
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.SetFriendTagsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.SetFriendTagsResult
function SetFriendTags(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/SetFriendTags", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.SetFriendTags = SetFriendTags

-- Registers the iOS device to receive push notifications
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RegisterForIOSPushNotification
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RegisterForIOSPushNotificationRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RegisterForIOSPushNotificationResult
function RegisterForIOSPushNotification(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/RegisterForIOSPushNotification", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.RegisterForIOSPushNotification = RegisterForIOSPushNotification

-- Restores all in-app purchases based on the given refresh receipt.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RestoreIOSPurchases
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RestoreIOSPurchasesRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RestoreIOSPurchasesResult
function RestoreIOSPurchases(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/RestoreIOSPurchases", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.RestoreIOSPurchases = RestoreIOSPurchases

-- Validates with the Apple store that the receipt for an iOS in-app purchase is valid and that it matches the purchased catalog item
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/ValidateIOSReceipt
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ValidateIOSReceiptRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ValidateIOSReceiptResult
function ValidateIOSReceipt(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/ValidateIOSReceipt", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.ValidateIOSReceipt = ValidateIOSReceipt

-- Get details about all current running game servers matching the given parameters.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCurrentGames
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.CurrentGamesRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.CurrentGamesResult
function GetCurrentGames(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCurrentGames", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCurrentGames = GetCurrentGames

--  Get details about the regions hosting game servers matching the given parameters.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetGameServerRegions
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GameServerRegionsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GameServerRegionsResult
function GetGameServerRegions(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetGameServerRegions", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetGameServerRegions = GetGameServerRegions

-- Attempts to locate a game session matching the given parameters. If the goal is to match the player into a specific active session, only the LobbyId is required. Otherwise, the BuildVersion, GameMode, and Region are all required parameters. Note that parameters specified in the search are required (they are not weighting factors). If a slot is found in a server instance matching the parameters, the slot will be assigned to that player, removing it from the availabe set. In that case, the information on the game session will be returned, otherwise the Status returned will be GameNotFound. Note that EnableQueue is deprecated at this time.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/Matchmake
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.MatchmakeRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.MatchmakeResult
function Matchmake(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/Matchmake", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.Matchmake = Matchmake

-- Start a new game server with a given configuration, add the current player and return the connection information.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/StartGame
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.StartGameRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.StartGameResult
function StartGame(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/StartGame", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.StartGame = StartGame

-- Registers the Android device to receive push notifications
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AndroidDevicePushNotificationRegistration
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AndroidDevicePushNotificationRegistrationRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AndroidDevicePushNotificationRegistrationResult
function AndroidDevicePushNotificationRegistration(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AndroidDevicePushNotificationRegistration", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AndroidDevicePushNotificationRegistration = AndroidDevicePushNotificationRegistration

-- Validates a Google Play purchase and gives the corresponding item to the player.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/ValidateGooglePlayPurchase
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ValidateGooglePlayPurchaseRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ValidateGooglePlayPurchaseResult
function ValidateGooglePlayPurchase(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/ValidateGooglePlayPurchase", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.ValidateGooglePlayPurchase = ValidateGooglePlayPurchase

-- Logs a custom analytics event
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/LogEvent
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LogEventRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.LogEventResult
function LogEvent(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/LogEvent", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.LogEvent = LogEvent

-- Writes a character-based event into PlayStream.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/WriteCharacterEvent
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.WriteClientCharacterEventRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.WriteEventResponse
function WriteCharacterEvent(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/WriteCharacterEvent", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.WriteCharacterEvent = WriteCharacterEvent

-- Writes a player-based event into PlayStream.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/WritePlayerEvent
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.WriteClientPlayerEventRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.WriteEventResponse
function WritePlayerEvent(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/WritePlayerEvent", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.WritePlayerEvent = WritePlayerEvent

-- Writes a title-based event into PlayStream.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/WriteTitleEvent
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.WriteTitleEventRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.WriteEventResponse
function WriteTitleEvent(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/WriteTitleEvent", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.WriteTitleEvent = WriteTitleEvent

-- Adds users to the set of those able to update both the shared data, as well as the set of users in the group. Only users in the group can add new members.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AddSharedGroupMembers
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddSharedGroupMembersRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AddSharedGroupMembersResult
function AddSharedGroupMembers(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AddSharedGroupMembers", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AddSharedGroupMembers = AddSharedGroupMembers

-- Requests the creation of a shared group object, containing key/value pairs which may be updated by all members of the group. Upon creation, the current user will be the only member of the group.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/CreateSharedGroup
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.CreateSharedGroupRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.CreateSharedGroupResult
function CreateSharedGroup(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/CreateSharedGroup", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.CreateSharedGroup = CreateSharedGroup

-- Retrieves data stored in a shared group object, as well as the list of members in the group. Non-members of the group may use this to retrieve group data, including membership, but they will not receive data for keys marked as private.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetSharedGroupData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetSharedGroupDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetSharedGroupDataResult
function GetSharedGroupData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetSharedGroupData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetSharedGroupData = GetSharedGroupData

-- Removes users from the set of those able to update the shared data and the set of users in the group. Only users in the group can remove members. If as a result of the call, zero users remain with access, the group and its associated data will be deleted.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RemoveSharedGroupMembers
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RemoveSharedGroupMembersRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RemoveSharedGroupMembersResult
function RemoveSharedGroupMembers(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/RemoveSharedGroupMembers", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.RemoveSharedGroupMembers = RemoveSharedGroupMembers

-- Adds, updates, and removes data keys for a shared group object. If the permission is set to Public, all fields updated or added in this call will be readable by users not in the group. By default, data permissions are set to Private. Regardless of the permission setting, only members of the group can update the data.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdateSharedGroupData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateSharedGroupDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateSharedGroupDataResult
function UpdateSharedGroupData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdateSharedGroupData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdateSharedGroupData = UpdateSharedGroupData

-- Executes a CloudScript function, with the 'currentPlayerId' set to the PlayFab ID of the authenticated player.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/ExecuteCloudScript
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ExecuteCloudScriptRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ExecuteCloudScriptResult
function ExecuteCloudScript(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/ExecuteCloudScript", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.ExecuteCloudScript = ExecuteCloudScript

-- Retrieves the title-specific URL for Cloud Script servers. This must be queried once, prior  to making any calls to RunCloudScript.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCloudScriptUrl
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCloudScriptUrlRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCloudScriptUrlResult
function GetCloudScriptUrl(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCloudScriptUrl", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCloudScriptUrl = GetCloudScriptUrl

-- Triggers a particular server action, passing the provided inputs to the hosted Cloud Script. An action in this context is a handler in the JavaScript. NOTE: Before calling this API, you must call GetCloudScriptUrl to be assigned a Cloud Script server URL. When using an official PlayFab SDK, this URL is stored internally in the SDK, but GetCloudScriptUrl must still be manually called.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/RunCloudScript
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RunCloudScriptRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.RunCloudScriptResult
function RunCloudScript(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/RunCloudScript", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.RunCloudScript = RunCloudScript

-- This API retrieves a pre-signed URL for accessing a content file for the title. A subsequent  HTTP GET to the returned URL will attempt to download the content. A HEAD query to the returned URL will attempt to  retrieve the metadata of the content. Note that a successful result does not guarantee the existence of this content -  if it has not been uploaded, the query to retrieve the data will fail. See this post for more information:  https://community.playfab.com/hc/en-us/community/posts/205469488-How-to-upload-files-to-PlayFab-s-Content-Service
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetContentDownloadUrl
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetContentDownloadUrlRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetContentDownloadUrlResult
function GetContentDownloadUrl(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetContentDownloadUrl", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetContentDownloadUrl = GetContentDownloadUrl

-- Lists all of the characters that belong to a specific user. CharacterIds are not globally unique; characterId must be evaluated with the parent PlayFabId to guarantee uniqueness.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetAllUsersCharacters
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ListUsersCharactersRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ListUsersCharactersResult
function GetAllUsersCharacters(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetAllUsersCharacters", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetAllUsersCharacters = GetAllUsersCharacters

-- Retrieves a list of ranked characters for the given statistic, starting from the indicated point in the leaderboard
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCharacterLeaderboard
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterLeaderboardRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterLeaderboardResult
function GetCharacterLeaderboard(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCharacterLeaderboard", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCharacterLeaderboard = GetCharacterLeaderboard

-- Retrieves the details of all title-specific statistics for the user
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCharacterStatistics
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterStatisticsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterStatisticsResult
function GetCharacterStatistics(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCharacterStatistics", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCharacterStatistics = GetCharacterStatistics

-- Retrieves a list of ranked characters for the given statistic, centered on the requested Character ID
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetLeaderboardAroundCharacter
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardAroundCharacterRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardAroundCharacterResult
function GetLeaderboardAroundCharacter(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetLeaderboardAroundCharacter", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetLeaderboardAroundCharacter = GetLeaderboardAroundCharacter

-- Retrieves a list of all of the user's characters for the given statistic.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetLeaderboardForUserCharacters
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardForUsersCharactersRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetLeaderboardForUsersCharactersResult
function GetLeaderboardForUserCharacters(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetLeaderboardForUserCharacters", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetLeaderboardForUserCharacters = GetLeaderboardForUserCharacters

-- Grants the specified character type to the user. CharacterIds are not globally unique; characterId must be evaluated with the parent PlayFabId to guarantee uniqueness.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GrantCharacterToUser
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GrantCharacterToUserRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GrantCharacterToUserResult
function GrantCharacterToUser(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GrantCharacterToUser", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GrantCharacterToUser = GrantCharacterToUser

-- Updates the values of the specified title-specific statistics for the specific character. By default, clients are not permitted to update statistics. Developers may override this setting in the Game Manager > Settings > API Features.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdateCharacterStatistics
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateCharacterStatisticsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateCharacterStatisticsResult
function UpdateCharacterStatistics(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdateCharacterStatistics", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdateCharacterStatistics = UpdateCharacterStatistics

-- Retrieves the title-specific custom data for the character which is readable and writable by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCharacterData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterDataResult
function GetCharacterData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCharacterData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCharacterData = GetCharacterData

-- Retrieves the title-specific custom data for the character which can only be read by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetCharacterReadOnlyData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetCharacterDataResult
function GetCharacterReadOnlyData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetCharacterReadOnlyData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetCharacterReadOnlyData = GetCharacterReadOnlyData

-- Creates and updates the title-specific custom data for the user's character which is readable  and writable by the client
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/UpdateCharacterData
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateCharacterDataRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.UpdateCharacterDataResult
function UpdateCharacterData(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/UpdateCharacterData", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.UpdateCharacterData = UpdateCharacterData

-- Validates with Amazon that the receipt for an Amazon App Store in-app purchase is valid and that it matches the purchased catalog item
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/ValidateAmazonIAPReceipt
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ValidateAmazonReceiptRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.ValidateAmazonReceiptResult
function ValidateAmazonIAPReceipt(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/ValidateAmazonIAPReceipt", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.ValidateAmazonIAPReceipt = ValidateAmazonIAPReceipt

-- Accepts an open trade. If the call is successful, the offered and accepted items will be swapped between the two players' inventories.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AcceptTrade
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AcceptTradeRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AcceptTradeResponse
function AcceptTrade(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AcceptTrade", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AcceptTrade = AcceptTrade

-- Cancels an open trade.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/CancelTrade
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.CancelTradeRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.CancelTradeResponse
function CancelTrade(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/CancelTrade", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.CancelTrade = CancelTrade

-- Gets all trades the player has either opened or accepted, optionally filtered by trade status.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayerTrades
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerTradesRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerTradesResponse
function GetPlayerTrades(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayerTrades", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayerTrades = GetPlayerTrades

-- Gets the current status of an existing trade.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetTradeStatus
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetTradeStatusRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetTradeStatusResponse
function GetTradeStatus(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetTradeStatus", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetTradeStatus = GetTradeStatus

-- Opens a new outstanding trade.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/OpenTrade
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.OpenTradeRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.OpenTradeResponse
function OpenTrade(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/OpenTrade", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.OpenTrade = OpenTrade

-- Attributes an install for advertisment.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/AttributeInstall
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AttributeInstallRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.AttributeInstallResult
function AttributeInstall(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/AttributeInstall", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.AttributeInstall = AttributeInstall

-- List all segments that a player currently belongs to at this moment in time.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayerSegments
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerSegmentsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerSegmentsResult
function GetPlayerSegments(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayerSegments", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayerSegments = GetPlayerSegments

-- Get all tags with a given Namespace (optional) from a player profile.
-- API Method Documentation: https://api.playfab.com/Documentation/Client/method/GetPlayerTags
-- Request Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerTagsRequest
-- Result Documentation: https://api.playfab.com/Documentation/Client/datatype/PlayFab.Client.Models/PlayFab.Client.Models.GetPlayerTagsResult
function GetPlayerTags(request, onSuccess, onError)
    if (not IsClientLoggedIn()) then error("Must be logged in to call this method") end
    IPlayFabHttps.MakePlayFabApiCall("/Client/GetPlayerTags", request, "X-Authorization", PlayFabSettings.internalSettings.sessionTicket, onSuccess, onError)
end
PlayFabClientApi.GetPlayerTags = GetPlayerTags

return PlayFabClientApi
